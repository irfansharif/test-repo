load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@bazel_gazelle//:def.bzl", "gazelle")

# Lets you run `bazel run //:gazelle` to generate BUILD files. Will need to be
# re-run if any of the directives below are changed.

# gazelle:prefix github.com/irfansharif/test-repo
# gazelle:build_file_name BUILD.bazel

gazelle(
    name = "gazelle",
    prefix = "github.com/irfansharif/test-repo",
)

go_library(
    name = "test_repo_lib",
    srcs = ["main.go"],
    cdeps = ["//:libroach"],
    cgo = True,
    cppopts = [
        "-Ic-deps/libroach/include",
        "-Ic-deps/rocksdb/include",
    ],  # XXX: shouldn't this include /external?
    importpath = "github.com/irfansharif/test-repo",
    visibility = ["//visibility:private"],
)

go_binary(
    name = "testrepo",
    embed = [":test_repo_lib"],
    visibility = ["//visibility:public"],
)

load("@rules_foreign_cc//tools/build_defs:cmake.bzl", "cmake_external")

# cmake_external(
#     name = "rocksdb",
#     cache_entries = {
#         "DCMAKE_TARGET_MESSAGES": "OFF",
#         "DWITH_GFLAGS": "OFF",
#         # "DSNAPPY_LIBRARIES": "/Users/irfansharif/Software/native/x86_64-apple-darwin19.6.0/snappy/libsnappy.a",
#         # XXX: I don't think these flags are getting used.
#         "DSNAPPY_LIBRARIES": "external/snappy/libsnappy.a",
#         # "DSNAPPY_INCLUDE_DIR": "/Users/irfansharif/Software/src/github.com/cockroachdb/cockroach/c-deps/snappy;/Users/irfansharif/Software/native/x86_64-apple-darwin19.6.0/snappy",
#         "DSNAPPY_INCLUDE_DIR": "external/snappy",
#         "DWITH_SNAPPY": "ON",
#         "DJEMALLOC_LIBRARIES": "/Users/irfansharif/Software/native/x86_64-apple-darwin19.6.0/jemalloc/lib/libjemalloc.a",
#         "DJEMALLOC_INCLUDE_DIR": "/Users/irfansharif/Software/native/x86_64-apple-darwin19.6.0/jemalloc/include",
#         "DWITH_JEMALLOC": "ON",
#         "DCMAKE_BUILD_TYPE": "Release",
#         "DUSE_RTT": "1",
#         "DFAIL_ON_WARNINGS": "0",
#     },
#     env_vars = {
#         "CFLAGS": " -msse3",
#         "CXXFLAGS": " -msse3",
#     },
#     lib_source = "@rocksdb//:all",
#     make_commands = ["make rocksdb && mkdir -p rocksdb/lib && mv librocksdb.a rocksdb/lib/librocksdb.a"],
#     # make_commands = ["make help && mkdir -p rocksdb/lib && touch rocksdb/lib/librocksdb.a "],
#     static_libraries = ["librocksdb.a"],
#     visibility = ["//visibility:public"],
#     # deps = ["//:snappy"],
# )

cmake_external(
    name = "libroach",
    cache_entries = {
        "DCMAKE_TARGET_MESSAGES": "OFF",
        "DCMAKE_BUILD_TYPE": "Release",
        "DPROTOBUF_LIB": "/Users/irfansharif/Software/native/x86_64-apple-darwin19.6.0/protobuf/libprotobuf.a",
        "DROCKSDB_LIB": "/Users/irfansharif/Software/native/x86_64-apple-darwin19.6.0/rocksdb/librocksdb.a",
        "DJEMALLOC_LIB": "/Users/irfansharif/Software/native/x86_64-apple-darwin19.6.0/jemalloc/lib/libjemalloc.a",
        "DSNAPPY_LIB": "/Users/irfansharif/Software/native/x86_64-apple-darwin19.6.0/snappy/libsnappy.a",
        "DCRYPTOPP_LIB": "/Users/irfansharif/Software/native/x86_64-apple-darwin19.6.0/cryptopp/libcryptopp.a",
    },
    lib_source = "@lr//:lrf",
    make_commands = ["make roach && mkdir -p libroach/lib && mv libroach.a libroach/lib/libroach.a"],
    # make_commands = ["make help && mkdir -p libroach/lib && touch libroach/lib/libroach.a"],
    static_libraries = ["libroach.a"],
    visibility = ["//visibility:public"],
    working_directory = "libroach",
)

# cmake_external(
#     name = "snappy",
#     cache_entries = {
#         "DCMAKE_BUILD_TYPE": "Release",
#         "DCMAKE_TARGET_MESSAGES": "OFF",
#     },
#     lib_source = "@snappy//:all",
#     static_libraries = ["libsnappy.a"],
#     visibility = ["//visibility:public"],
# )

cmake_external(
    name = "cryptopp",
    cache_entries = {
        "DCMAKE_BUILD_TYPE": "Release",
        "DCMAKE_TARGET_MESSAGES": "OFF",
    },
    lib_source = "@cryptopp//:all",
    static_libraries = ["libcryptopp.a"],
    visibility = ["//visibility:public"],
)
